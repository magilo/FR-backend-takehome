paths:
  /pet:
    post:
      tags:
      - pet
      summary: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/xml:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  /api/transactions/{payer}:
    put:
      tags:
      - transaction
      summary: Add a new transaction
      parameters:
      - name: payer
        in: path
        description: name of the payer for the transaction i.e. DANNON
        required: true
        schema:
          type: string
      requestBody:
        description: adds new transaction to transaction table and updates payer table
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
            examples:
              DANNON+300:
                value:
                  payer: DANNON
                  points: 300
                  timestamp: 2020-10-31T10:00:00Z
              DANNON-200:
                value:
                  payer: DANNON
                  points: -200
                  timestamp: 2020-10-31T15:00:00Z
              DANNON+1000:
                value:
                  payer: DANNON
                  points: 1000
                  timestamp: 2020-11-02T14:00:00Z
              UNILEVER+200:
                value:
                  payer: UNILEVER
                  points: 200
                  timestamp: 2020-10-31T11:00:00Z
              MILLERCOORS+10000:
                value:
                  payer: MILLER COORS
                  points: 10000
                  timestamp: 2020-11-01T14:00:00Z
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /api/transactions:
    get:
      tags:
      - transaction
      summary: Gets a list of transactions from database.
      description: A row from the transactions table contains payerName, points, timestamp, and leftover points.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'



components:
  $ref: ./definitions.yaml

